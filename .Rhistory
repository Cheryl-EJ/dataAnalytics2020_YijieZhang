EPI_data <- read.csv("/Users/zhangyijie/Desktop/EPI_data.csv")
attach(EPI_data)
summary(EPI_data$EPI)
fivenum(EPI_data$EPI,na.rm=TRUE)
summary(EPI_data$DALY)
fivenum(EPI_data$DALY,na.rm=TRUE)
hist(EPI_data$EPI)
hist(EPI_data$DALY)
boxplot(ENVHEALTH,ECOSYSTEM)
qqplot(ENVHEALTH,ECOSYSTEM)
boxplot(ENVHEALTH,DALY,AIR_H,WATER_H)
lmENVH<-lm(ENVHEALTH~DALY+AIR_H+WATER_H)
lmENVH
summary(lmENVH)
cENVH<-coef(lmENVH)
cENVH
DALYNEW<-c(seq(5,95,5))
AIR_HNEW<-c(seq(5,95,5))
WATER_HNEW<-c(seq(5,95,5))
NEW<- data.frame(DALY = DALYNEW, AIR_H = AIR_HNEW, WATER_H = WATER_HNEW)
pENV<- predict(lmENVH,NEW,interval="prediction")
pENV
cENV<- predict(lmENVH,NEW,interval="confidence")
cENV
lmAIR_E<-lm(AIR_E~DALY+AIR_H+WATER_H)
lmAIR_E
summary(lmAIR_E)
cAIR_E<-coef(lmAIR_E)
cAIR_E
pAIR_E<- predict(lmAIR_E,NEW,interval="prediction")
pAIR_E
cAIR_E<- predict(lmAIR_E,NEW,interval="confidence")
cAIR_E
lmCLIMATE<-lm(CLIMATE~DALY+AIR_H+WATER_H)
lmCLIMATE
summary(lmCLIMATE)
cCLIMATE<-coef(lmCLIMATE)
cCLIMATE
pCLIMATE<- predict(lmCLIMATE,NEW,interval="prediction")
pCLIMATE
cCLIMATE<- predict(lmCLIMATE,NEW,interval="confidence")
cCLIMATE
EPI_data2<-EPI_data[,-c(1:5,10:13,29, 31, 39, 41, 43:44, 50:51, 54, 57, 60, 62, 67:68, 72:73, 75, 85, 88, 95, 98, 125:160)]
EPI_data3<-na.omit(EPI_data2)
correlations <- cor(EPI_data3)
correlations
cat("The single most important factor in increasing the EPI in a given region is DALY_tr", "\n")
multipleRegression <- read.csv("/Users/zhangyijie/Desktop/dataset_multipleRegression.csv")
attach(multipleRegression)
lmROLL<-lm(ROLL~UNEM+HGRAD)
lmROLL
summary(lmROLL)
cROLL<-coef(lmROLL)
cROLL
UNEMNEW<-c(seq(5,95,5))
HGRADNEW<-c(seq(5,95,5))
NEW<- data.frame(UNEM, HGRAD)
pROLL<- predict(lmROLL,NEW,interval="prediction")
pROLL
cROLL<- predict(lmROLL,NEW,interval="confidence")
cROLL
NEW2<- data.frame(UNEM=7, HGRAD=90000)
pROLL2<- predict(lmROLL,NEW2,interval="prediction")
pROLL2
cROLL2<- predict(lmROLL,NEW2,interval="confidence")
cROLL2
lmROLL2<-lm(ROLL~UNEM+HGRAD+INC)
lmROLL2
summary(lmROLL2)
cROLL2<-coef(lmROLL2)
cROLL2
DATA2<- data.frame(UNEM, HGRAD, INC)
pROLL3<- predict(lmROLL2,DATA2,interval="prediction")
pROLL3
cROLL3<- predict(lmROLL2,DATA2,interval="confidence")
cROLL3
DATA3<-data.frame(UNEM=7, HGRAD=90000, INC=25000)
pROLL4<- predict(lmROLL2,DATA3,interval="prediction")
pROLL4
cROLL4<- predict(lmROLL2,DATA3,interval="confidence")
cROLL4
EPI_data <- read.csv("/Users/zhangyijie/Desktop/EPI_data.csv")
NEW<-EPI_data[,c(14, 17)]
library(dplyr)
sample_n(NEW, 5)
sample_frac(NEW, 0.1)
new_decs_EPI <-arrange(NEW, desc(EPI))
new_decs_DALY <-arrange(NEW, desc(DALY))
mutate(NEW, double_EPI  = EPI * 2, double_DALY = DALY * 2)
summarise(NEW, mean(EPI, na.rm = T), mean(DALY, na.rm = T))
multipleRegression <- read.csv("/Users/zhangyijie/Desktop/dataset_multipleRegression.csv")
attach(multipleRegression)
lmROLL<-lm(ROLL~UNEM+HGRAD)
lmROLL
summary(lmROLL)
cROLL<-coef(lmROLL)
cROLL
UNEMNEW<-c(seq(5,95,5))
HGRADNEW<-c(seq(5,95,5))
NEW<- data.frame(UNEM= UNEMNEW, HGRAD= HGRADNEW)
pROLL<- predict(lmROLL,NEW,interval="prediction")
pROLL
cROLL<- predict(lmROLL,NEW,interval="confidence")
cROLL
NEW2<- data.frame(UNEM=7, HGRAD=90000)
pROLL2<- predict(lmROLL,NEW2,interval="prediction")
pROLL2
cROLL2<- predict(lmROLL,NEW2,interval="confidence")
cROLL2
lmROLL2<-lm(ROLL~UNEM+HGRAD+INC)
lmROLL2
summary(lmROLL2)
cROLL2<-coef(lmROLL2)
cROLL2
INCNEW<-c(seq(5,95,5))
DATA2<- data.frame(UNEM= UNEMNEW, HGRAD= HGRADNEW, INC = INCNEW)
pROLL3<- predict(lmROLL2,DATA2,interval="prediction")
pROLL3
cROLL3<- predict(lmROLL2,DATA2,interval="confidence")
cROLL3
DATA3<-data.frame(UNEM=7, HGRAD=90000, INC=25000)
pROLL4<- predict(lmROLL2,DATA3,interval="prediction")
pROLL4
cROLL4<- predict(lmROLL2,DATA3,interval="confidence")
cROLL4
nyt2 <- read.csv("/Users/zhangyijie/Desktop/nyt2.csv")
nyt3 <- read.csv("/Users/zhangyijie/Desktop/nyt3.csv")
nyt4 <- read.csv("/Users/zhangyijie/Desktop/nyt4.csv")
nyt5 <- read.csv("/Users/zhangyijie/Desktop/nyt5.csv")
nyt6 <- read.csv("/Users/zhangyijie/Desktop/nyt6.csv")
qqnorm(nyt2$Age)
qqline(nyt2$Age)
qqnorm(nyt2$Impressions)
qqline(nyt2$Impressions)
View(nyt2)
qqnorm(nyt2$Age)
qqline(nyt2$Age)
qqnorm(nyt3$Age)
qqline(nyt3$Age)
qqnorm(nyt4$Age)
qqline(nyt4$Age)
qqnorm(nyt5$Age)
qqline(nyt5$Age)
qqnorm(nyt6$Age)
qqline(nyt6$Age)
qqnorm(nyt2$Impressions)
qqline(nyt2$Impressions)
qqnorm(nyt3$Impressions)
qqline(nyt3$Impressions)
qqnorm(nyt4$Impressions)
qqline(nyt4$Impressions)
qqnorm(nyt5$Impressions)
qqline(nyt5$Impressions)
qqnorm(nyt6$Impressions)
qqline(nyt6$Impressions)
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
bronx1<-na.omit(bronx1)
View(bronx1)
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
View(bronx1)
attach(bronx1)
SALE.PRICE<-sub("\\$","",SALE.PRICE)
SALE.PRICE<-as.numeric(gsub(",","", SALE.PRICE))
GROSS.SQUARE.FEET<-as.numeric(gsub(",","", GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","", LAND.SQUARE.FEET))
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
SALE.PRICE<-na.omit(SALE.PRICE)
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
log1<-log(SALE.PRICE)
log1<-na.omit(log1)
m1<-lm(log1~log(GROSS.SQUARE.FEET))
log2<-log(GROSS.SQUARE.FEET)
log2<-na.omit(log2)
m1<-lm(log1~log2)
apply(bronx1,1,function(x) sum(is.na(x)))
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET),na.action = na.omit, data = bronx1)
bronx1<-na.omit(bronx1)
View(bronx1)
View(bronx1)
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
bronx2<-bronx1[,c(15,20)]
View(bronx2)
bronx2<-na.omit(bronx2)
attach(bronx2)
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
bronx2<-bronx1[,c(15,20)]
bronx2<-na.omit(bronx2)
attach(bronx2)
SALE.PRICE<-sub("\\$","",SALE.PRICE)
SALE.PRICE<-as.numeric(gsub(",","", SALE.PRICE))
GROSS.SQUARE.FEET<-as.numeric(gsub(",","", GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","", LAND.SQUARE.FEET))
View(bronx1)
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
bronx2<-bronx1[,c(16,20)]
bronx2<-na.omit(bronx2)
attach(bronx2)
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
bronx2<-bronx1[,c(16,20)]
bronx2<-na.omit(bronx2)
attach(bronx2)
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!="0" & bronx1$LAND.SQUARE.FEET!="0" & bronx1$SALE.PRICE!="$0"),]
bronx2<-bronx1[,c(15,16,20)]
bronx2<-na.omit(bronx2)
attach(bronx2)
SALE.PRICE<-sub("\\$","",SALE.PRICE)
SALE.PRICE<-as.numeric(gsub(",","", SALE.PRICE))
GROSS.SQUARE.FEET<-as.numeric(gsub(",","", GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","", LAND.SQUARE.FEET))
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!=0 & bronx1$LAND.SQUARE.FEET!=0 & bronx1$SALE.PRICE!=0),]
bronx1<-na.omit(bronx1)
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!=0 & bronx1$LAND.SQUARE.FEET!=0 & bronx1$SALE.PRICE!=0),]
attach(bronx1)
SALE.PRICE<-sub("\\$","",SALE.PRICE)
SALE.PRICE<-as.numeric(gsub(",","", SALE.PRICE))
GROSS.SQUARE.FEET<-as.numeric(gsub(",","", GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","", LAND.SQUARE.FEET))
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
bronx2<-bronx1[,c(15,16,20)]
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!=0 & bronx1$LAND.SQUARE.FEET!=0 & bronx1$SALE.PRICE!=0),]
bronx2<-bronx1[,c(15,16,20)]
attach(bronx2)
SALE.PRICE<-sub("\\$","",SALE.PRICE)
SALE.PRICE<-as.numeric(gsub(",","", SALE.PRICE))
GROSS.SQUARE.FEET<-as.numeric(gsub(",","", GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","", LAND.SQUARE.FEET))
m1<-lm(log(SALE.PRICE)~log(GROSS.SQUARE.FEET))
summary(m1)
abline(m1,col="red",lwd=2)
plot(resid(m1))
abline(m1,col="red",lwd=2)
m2<-lm(log(bronx1$SALE.PRICE)~log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
summary(m2)
plot(resid(m2))
m2a<-lm(log(bronx1$SALE.PRICE)~0+log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD))
summary(m2a)
plot(resid(m2a))
m3<-lm(log(bronx1$SALE.PRICE)~0+log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD)+factor(bronx1$BUILDING.CLASS.CATEGORY))
summary(m3)
plot(resid(m3))
m4<-lm(log(bronx1$SALE.PRICE)~0+log(bronx1$GROSS.SQUARE.FEET)+log(bronx1$LAND.SQUARE.FEET)+factor(bronx1$NEIGHBORHOOD)*factor(bronx1$BUILDING.CLASS.CATEGORY))
summary(m4)
plot(resid(m4))
bronx1$SALE.PRICE<-sub("\\$","",bronx1$SALE.PRICE)
bronx1$SALE.PRICE<-as.numeric(gsub(",","", bronx1$SALE.PRICE))
bronx1$GROSS.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$GROSS.SQUARE.FEET))
bronx1$LAND.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$LAND.SQUARE.FEET))
bronx1$SALE.DATE<- as.Date(gsub("[^]:digit:]]","",bronx1$SALE.DATE))
bronx1$YEAR.BUILT<- as.numeric(gsub("[^]:digit:]]","",bronx1$YEAR.BUILT))
bronx1$ZIP.CODE<- as.character(gsub("[^]:digit:]]","",bronx1$ZIP.CODE))
library(gdata)
bronx1<-read.xls("/Users/zhangyijie/Desktop/rollingsales_bronx.xls")
bronx1<-bronx1[which(bronx1$GROSS.SQUARE.FEET!=0 & bronx1$LAND.SQUARE.FEET!=0 & bronx1$SALE.PRICE!=0),]
bronx1$SALE.PRICE<-sub("\\$","",bronx1$SALE.PRICE)
bronx1$SALE.PRICE<-as.numeric(gsub(",","", bronx1$SALE.PRICE))
bronx1$GROSS.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$GROSS.SQUARE.FEET))
bronx1$LAND.SQUARE.FEET<-as.numeric(gsub(",","", bronx1$LAND.SQUARE.FEET))
bronx1$SALE.DATE<- as.Date(gsub("[^]:digit:]]","",bronx1$SALE.DATE))
bronx1$YEAR.BUILT<- as.numeric(gsub("[^]:digit:]]","",bronx1$YEAR.BUILT))
bronx1$ZIP.CODE<- as.character(gsub("[^]:digit:]]","",bronx1$ZIP.CODE))
minprice<-10000
bronx1<-bronx1[which(bronx1$SALE.PRICE>=minprice),]
nval<-dim(bronx1)[1]
bronx1$ADDRESSONLY<- gsub("[,][[:print:]]*","",gsub("[ ]+","",trim(bronx1$ADDRESS)))
bronxadd<-unique(data.frame(bronx1$ADDRESSONLY, bronx1$ZIP.CODE,stringsAsFactors=FALSE))
names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE") bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),]
duplicates<-duplicated(bronx1$ADDRESSONLY)
names(bronxadd)<-c("ADDRESSONLY","ZIP.CODE")
bronxadd<-bronxadd[order(bronxadd$ADDRESSONLY),]
for(i in 1:2345) {
if(duplicates[i]==FALSE) dupadd<-bronxadd[bronxadd$duplicates,1]
}
nsample=450
addsample<-bronxadd[sample.int(dim(bronxadd),size=nsample),]
library(ggmap)
addrlist<-paste(addsample$ADDRESSONLY, "NY", addsample$ZIP.CODE, "US", sep=" ")
querylist<-geocode(addrlist)
if(!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("dkahle/ggmap", ref = "tidyup")
library(ggmap)
register_google(key="your google map API key")
querylist<-geocode(addrlist)
matched<-(querylist$lat!=0 &&querylist$lon!=0) addsample<-cbind(addsample,querylist$lat,querylist$lon)
names(addsample)<-c("ADDRESSONLY","ZIPCODE","Latitude","Longitude")
pairs(~ Fertility + Education + Catholic, data = swiss, subset = Education < 20, main = "Swiss data, Education < 20")
require(party)
install.packages("party")
require(party)
swiss_ctree <- ctree(Fertility ~ Agriculture + Education + Catholic, data = swiss)
plot(swiss_ctree)
allexamples <- FALSE
y <- data.frame(A=c(rep("red", 100), rep("blue", 100)),
B=c(rnorm(100),round(rnorm(100,5,1),1)), C=runif(200),
D=c(rep("big", 150), rep("small", 50)),
E=rnorm(200))
gpairs(y)
install.packages("gpairs")
library(gpairs)
gpairs(y)
data(iris)
gpairs(iris)
gpairs(iris)
if (allexamples) {
gpairs(iris, upper.pars = list(scatter = 'stats'),
scatter.pars = list(pch = substr(as.character(iris$Species), 1, 1),
col = as.numeric(iris$Species)),
stat.pars = list(verbose = FALSE))
gpairs(iris, lower.pars = list(scatter = 'corrgram'),
upper.pars = list(conditional = 'boxplot', scatter = 'loess'),
scatter.pars = list(pch = 20))
}
data(Leaves)
gpairs(Leaves[1:10], lower.pars = list(scatter = 'loess'))
if (allexamples) {
gpairs(Leaves[1:10], upper.pars = list(scatter = 'stats'),
lower.pars = list(scatter = 'corrgram'),
stat.pars = list(verbose = FALSE), gap = 0)
corrgram(Leaves[,-33])
}
runexample <- FALSE
if (runexample) {
data(NewHavenResidential)
gpairs(NewHavenResidential)
}
require(kknn)
val <- sample(1:m, size = round(m/3), replace = FALSE, prob = rep(1/m, m))
m <- dim(iris)[1]
val <- sample(1:m, size = round(m/3), replace = FALSE, prob = rep(1/m, m))
iris.learn <- iris[-val,]
iris.valid <- iris[val,]
iris.kknn <- kknn(Species~., iris.learn, iris.valid, distance = 1,kernel = "triangular")
summary(iris.kknn)
fit <- fitted(iris.kknn)
table(iris.valid$Species, fit)
pcol <- as.character(as.numeric(iris.valid$Species))
pairs(iris.valid[1:4], pch = pcol, col = c("green", "red")[(iris.valid$Species != fit)+1])
data(ionosphere)
ionosphere.learn <- ionosphere[1:200,]
ionosphere.valid <- ionosphere[-c(1:200),]
fit.kknn <- kknn(class ~ ., ionosphere.learn, ionosphere.valid)
table(ionosphere.valid$class, fit.kknn$fit)
(fit.train1 <- train.kknn(class ~ ., ionosphere.learn, kmax = 15,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal"), distance = 1))
table(predict(fit.train1, ionosphere.valid), ionosphere.valid$class)
(fit.train2 <- train.kknn(class ~ ., ionosphere.learn, kmax = 15,
kernel = c("triangular", "rectangular", "epanechnikov", "optimal"), distance = 2))
table(predict(fit.train2, ionosphere.valid), ionosphere.valid$class)
pairs(~ Fertility + Education + Catholic, data = swiss, subset = Education < 20, main = "Swiss data, Education < 20")
sclass <- kmeans(swiss[2:6], 3)
table(sclass$cluster, swiss[,1])
data(HairEyeColor)
mosaicplot(HairEyeColor)
margin.table(HairEyeColor,3)
margin.table(HairEyeColor,c(1,3))
nyt1<-read.csv("/Users/zhangyijie/Desktop/nyt1.csv")
nyt1<-nyt1[which(nyt1$Impressions>0 & nyt1$Clicks>0 & nyt1$Age>0),]
nnyt1<-dim(nyt1)[1]
sampling.rate=0.9
num.test.set.labels=nnyt1*(1.-sampling.rate)
training <-sample(1:nnyt1,sampling.rate*nnyt1, replace=FALSE)
train<-subset(nyt1[training,],select=c(Age,Impressions))
testing<-setdiff(1:nnyt1,training)
test<-subset(nyt1[testing,],select=c(Age,Impressions))
cg<-nyt1$Gender[training]
true.labels<-nyt1$Gender[testing]
classif<-knn(train,test,cg,k=5)
library(class)
classif<-knn(train,test,cg,k=5)
classif
attributes(.Last.value)
library(MASS)
data(mammals)
mammals.glm <- glm(log(brain) ~ log(body), data = mammals)
(cv.err <- cv.glm(mammals, mammals.glm)$delta)
library(boot)
(cv.err <- cv.glm(mammals, mammals.glm)$delta)
(cv.err.6 <- cv.glm(mammals, mammals.glm, K = 6)$delta)
muhat <- fitted(mammals.glm)
mammals.diag <- glm.diag(mammals.glm)
(cv.esterr <- mean((mammals.glm$y - muhat)^2/(1 - mammals.diag$h)^2))
data(nodal)
cost <- function(r, pi = 0) mean(abs(r-pi) > 0.5)
nodal.glm <- glm(r ~ stage+xray+acid, binomial, data = nodal)
(cv.err <- cv.glm(nodal, nodal.glm, cost, K = nrow(nodal))$delta)
(cv.11.err <- cv.glm(nodal, nodal.glm, cost, K = 11)$delta)
